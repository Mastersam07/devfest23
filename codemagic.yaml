workflows:
  dev-android:
    name: build, test & publish Android version
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      flutter: 3.16.0
      xcode: latest
      android_signing:
        - devfest23-key
      vars:
        TYPE: 'release' # Can be 'patch' or 'release'
      groups:
        # Exports the SHOREBIRD_TOKEN environment variable
        - shorebird
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    triggering:
      branch_patterns:
        - pattern: 'dev'
          include: true
      events:
        - push
      cancel_previous_builds: true
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Widgetbook generator
        script: |
          flutter pub run build_runner build --delete-conflicting-outputs
      - name: Flutter analyze
        ignore_failure: true
        script: |
          flutter analyze .
      - name: Flutter unit tests
        script: |
          flutter test
        ignore_failure: true
      - name: üê¶ Setup Shorebird
        script: |
          # Install Shorebird
          curl --proto '=https' --tlsv1.2 https://raw.githubusercontent.com/shorebirdtech/install/main/install.sh -sSf | bash

          # Add Shorebird to PATH
          echo PATH="$HOME/.shorebird/bin:$PATH" >> $CM_ENV  
      - name: üôå Shorebird Build/Patch/Release
        script: |
          echo "‚û°Ô∏è Using type: $TYPE"

          # If type is neither "patch" nor "release", exit with error
          if [ "$TYPE" != "patch" ] && [ "$TYPE" != "release" ]; then
            echo "TYPE must be either 'patch' or 'release'"
            exit 1
          fi

          # Check type and run corresponding command
          if [ "$TYPE" == "patch" ]; then
            echo "ü©π Running patch command"
            shorebird patch android -- -t lib/main_prod.dart --release --obfuscate --split-debug-info=.
          elif [ "$TYPE" == "release" ]; then
            echo "üöÄ Running release command"
            shorebird release android --artifact apk -- -t lib/main_prod.dart --release --obfuscate --split-debug-info=.
          fi     
    artifacts:
      - build/**/outputs/apk/**/*.apk
    publishing:
      email:
        recipients:
          - abadasamuelosp@gmail.com
          - sebastinesoacatp@gmail.com
        notify:
          success: true # To receive a notification when a build succeeds
          failure: false # To not receive a notification when a build fails
